name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ECR_REPOSITORY: my-images-repo
  ECR_REGISTRY: 560442768576.dkr.ecr.ap-northeast-1.amazonaws.com
  IMAGE_TAG: node-server
  CLUSTER_NAME: my-cluster
  AWS_REGION: ap-northeast-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - uses: actions/checkout@v2

      # Configure AWS credentials from GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      # Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      # Push the Docker image to Amazon ECR
      - name: Push the Docker image
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Cleanup old images
        run: |
          images_to_delete=$(aws ecr list-images --repository-name ${{ env.ECR_REPOSITORY }} --region ${{ env.AWS_REGION }} --query 'imageIds[?imageTag!=`latest`]' --output json)
          if [ "$images_to_delete" != "[]" ]; then
            aws ecr batch-delete-image --repository-name ${{ env.ECR_REPOSITORY }} --region ${{ env.AWS_REGION }} --image-ids "$images_to_delete"
          else
            echo "No old images to delete"
          fi

      # # Deploy the Docker image to the EKS cluster using kubectl
      # # 1234
      # # test
      # - name: Deploy to EKS
      #   run: |
      #     kubectl set image deployment/my-actual-deployment-myapp myapp=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} -n node-server